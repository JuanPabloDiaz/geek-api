---
import { ClientRouter } from "astro:transitions";
import SearchBar from "../components/SearchBar";

export interface Props {
    site: string;
    title: string;
    tagline: string;
}

const { site, title, tagline } = Astro.props;
---

<!doctype html>
<html lang="en" data-new-ui-theme="light">
    <head>
        <ClientRouter />
        <meta charset="UTF-8" />
        <meta name="viewport" content="width=device-width" />
        <link rel="icon" type="image/svg+xml" href="/api.png" />
        <meta name="generator" content={Astro.generator} />
        <title>{site} â€” {title}</title>
        <meta property="og:title" content="Geek APIs" />
        <meta property="og:type" content="website" />
        <meta property="og:url" content="https://geek-api.jpdiaz.dev" />

        <!-- Google tag (gtag.js) -->
        <script type="text/partytown" async src="https://www.googletagmanager.com/gtag/js?id=G-XXX"></script>
        <script type="text/partytown">
            window.dataLayer = window.dataLayer || [];
            function gtag(){dataLayer.push(arguments);}
            gtag('js', new Date());

            gtag('config', 'G-XXX');
        </script>

    </head>

    <body>
        <div class="terminal-container">
            <div class="sticky-container">
                <header class="terminal-header">
                    <div class="terminal-header-top">
                        <div class="terminal-controls">
                            <span class="terminal-btn"></span>
                            <span class="terminal-btn"></span>
                            <span class="terminal-btn"></span>
                        </div>
                        <div class="terminal-title-container">
                            <a href="/" class="terminal-header-title">
                                <h3>{site} </h3>
                            </a>
                            <div class="terminal-title">{tagline}</div>
                            <div class="terminal-search">
                                <SearchBar client:load />
                            </div>
                        </div>
                        <div class="btn-group">
                            <button
                                class="theme-toggle"
                                id="theme-toggle"
                                title="Toggles light & dark"
                                aria-label="auto"
                                aria-live="polite"
                            >
                            <svg xmlns="http://www.w3.org/2000/svg" width="512" height="512" viewBox="0 0 512 512"><path fill="currentColor" fill-rule="evenodd" d="M277.333 405.333v85.333h-42.667v-85.333zm99.346-58.824l60.34 60.34l-30.17 30.17l-60.34-60.34zm-241.359 0l30.17 30.17l-60.34 60.34l-30.17-30.17zM256 139.353c64.422 0 116.647 52.224 116.647 116.647c0 64.422-52.225 116.647-116.647 116.647A116.427 116.427 0 0 1 139.352 256c0-64.423 52.225-116.647 116.648-116.647m0 42.666c-40.859 0-73.981 33.123-73.981 74.062a73.76 73.76 0 0 0 21.603 52.296c13.867 13.867 32.685 21.64 52.378 21.603zm234.666 52.647v42.667h-85.333v-42.667zm-384 0v42.667H21.333v-42.667zM105.15 74.98l60.34 60.34l-30.17 30.17l-60.34-60.34zm301.7 0l30.169 30.17l-60.34 60.34l-30.17-30.17zM277.332 21.333v85.333h-42.667V21.333z"/></svg>
                            </button>
                        </div>
                    </div>
                </header>
            </div>
            <main class="terminal-content">
                <slot />
            </main>

        <footer>
            <div class="terminal-footer">
                <span class="terminal-prompt">$</span> echo "2025 &copy; <a
                    href="https://jpdiaz.dev"
                    class="nu-u-link--subtle"
                    target="_blank"
                    rel="noopener noreferrer"
                    >jpdiaz.dev</a
                >. <a
                    href="https://github.com/marcelscruz/public-apis"
                    class="nu-u-link--subtle"
                    target="_blank"
                    rel="noopener noreferrer"
                    >API resources</a
                >."
                <span class="terminal-cursor">_</span>
            </div>
        </footer>
    </div>
    </body>
</html>
<style is:global>
    @font-face {
        font-family: "Fira Code";
        font-style: normal;
        font-weight: 400;
        src: url("https://fonts.gstatic.com/s/firacode/v21/uU9eCBsR6Z2vfE9aq3bL0fxyUs4tcw4W_D1sJVD7MOzlojwUKaJO.woff2") format("woff2");
    }
    @font-face {
        font-family: "Fira Code";
        font-style: normal;
        font-weight: 700;
        src: url("https://fonts.gstatic.com/s/firacode/v21/uU9eCBsR6Z2vfE9aq3bL0fxyUs4tcw4W_NprJVD7MOzlojwUKaJO.woff2") format("woff2");
    }
    :root {
        /* Old-school developer theme */
        --background: #002b36;
        --background-secondary: #073642;
        --background-selected: #094352;
        --text-primary: #93a1a1;
        --text-secondary: #839496;
        --text-secondary-alt: #586e75;
        --link: #268bd2;
        --accent: #cb4b16;
        --border-muted: #094352;
        --icon-primary: #93a1a1;
        --icon-secondary: #586e75;
        --button-primary: #268bd2;
        --body-copy: "Fira Code", monospace;
        --system-ui: monospace;
    }
    html {
        font-family: var(--body-copy);
        background-color: var(--background);
    }
    body {
        margin: 0;
        padding: 0;
        width: 100%;
        overflow-x: hidden;
    }
    main,
    .container {
        margin: 0 var(--spacing-06);
    }
    .terminal-container {
        max-width: 1400px;
        margin: 2rem auto;
        border: 1px solid var(--accent);
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 10px 30px rgba(0,0,0,0.4), 0 0 0 1px rgba(255,255,255,0.05);
    }

    .terminal-content {
        padding: var(--spacing-06);
        background-color: var(--background);
        min-height: 50vh;
    }
    header {
        margin-bottom: 0;
    }
    h1.title {
        max-inline-size: 24rem;
    }
    p {
        margin-top: var(--spacing-00);
    }
    p.description-text {
        max-inline-size: 24rem;
    }
    .nu-u-link--subtle {
        color: var(--text-secondary) !important;
    }
    .floating-nav {
        padding: var(--spacing-06) var(--spacing-09);
        top: 0;
        left: 0;
        right: 0;
        display: flex;
        justify-content: space-between;
        align-items: center;
        z-index: 999999;
    }
    .btn-group {
        display: flex;
        gap: var(--spacing-03);
        align-items: center;
    }
    .submit-btn {
        padding: 0.5625rem 0.9375rem;
        border: 1px solid var(--accent);
        outline: none;
        text-decoration: none;
        color: var(--text-primary);
        background-color: var(--background);
        border-radius: 0;
        font-size: var(--desktop-body-sm);
        font-family: var(--body-copy);
        text-transform: uppercase;
        letter-spacing: 0.5px;

        &:hover {
            background-color: var(--accent);
            color: var(--background);
        }

        &:active {
            background-color: var(--background);
            color: var(--accent);
        }

        &.disabled {
            background-color: var(--background);
            color: var(--icon-secondary);
            pointer-events: none;
        }

        &:focus {
            background-color: var(--background);
            outline: 1px solid var(--accent);
            color: var(--text-primary);
        }
    }
    .theme-toggle {
        z-index: 999;
        --icon-fill: var(--icon-secondary);
        --icon-fill-hover: var(--icon-secondary);
        width: var(--spacing-09);
        height: var(--spacing-09);
        background: none;
        border: none;
        padding: var(--spacing-00);
        color: var(--icon-secondary);
        cursor: pointer;
        touch-action: manipulation;
        -webkit-tap-highlight-color: transparent;
        display: flex;
        justify-content: center;
        align-items: center;
        border-radius: var(--spacing-02);

        @nest [data-theme="dark"] & {
            --icon-fill: var(--icon-secondary);
            --icon-fill-hover: var(--icon-secondary);
        }
    }
    .terminal-footer {
        padding: 1rem;
        text-align: center;
        font-weight: normal;
        font-style: normal;
        color: var(--text-secondary);
        font-size: var(--desktop-body-sm);
        line-height: var(--lh-desktop-body);
        font-family: var(--body-copy);
        background-color: var(--background-secondary);
        border-top: 1px solid var(--accent);
    }

    .terminal-cursor {
        color: var(--accent);
        font-weight: bold;
        animation: blink 1s step-end infinite;
    }

    @keyframes blink {
        0%, 100% { opacity: 1; }
        50% { opacity: 0; }
    }

    @media (max-width: 30rem) {
        main {
            margin: auto var(--spacing-06);
        }
        .floating-nav {
            padding: var(--spacing-06) var(--spacing-06);
        }
        .container {
            margin: var(--spacing-06);
        }
    }

    /* Terminal styling */
    .sticky-container {
        position: sticky;
        top: 0;
        z-index: 1000;
    }

    .terminal-header {
        display: flex;
        flex-direction: column;
        padding: 0.75rem 1rem;
        background-color: var(--background-secondary);
        border-top-left-radius: 0.5rem;
        border-top-right-radius: 0.5rem;
        border-bottom: 1px solid var(--accent);
    }

    .terminal-header-top {
        display: flex;
        align-items: center;
        width: 100%;
        margin-bottom: 0.75rem;
    }

    .terminal-title-container {
        display: flex;
        align-items: center;
        flex: 1;
    }

    .terminal-search {
        width: 20%;
        padding: 1rem;
    }

    .terminal-controls {
        display: flex;
        gap: 0.5rem;
    }

    .terminal-btn {
        width: 0.75rem;
        height: 0.75rem;
        border-radius: 50%;
        background-color: var(--accent);
        display: inline-block;
    }

    .terminal-btn:nth-child(2) {
        background-color: var(--link);
    }

    .terminal-btn:nth-child(3) {
        background-color: var(--text-secondary);
    }

    .terminal-title {
        font-family: var(--body-copy);
        font-size: 0.85rem;
        line-height: 1.4;
        color: var(--text-secondary);
        margin-right: 1rem;
    }

    .terminal-header-title {
        font-family: var(--body-copy);
        font-size: 1rem;
        color: var(--accent);
        margin: 0;
        flex: 1;
        margin-left: 10px;
        text-decoration: none;
    }

    .terminal-prompt {
        color: var(--accent);
        margin-right: 0.5rem;
        font-weight: bold;
    }

    h1.title {
        background-color: var(--background-secondary);
        border: 1px solid var(--accent);
        border-bottom: none;
        padding: 1rem;
        margin: 0;
        max-inline-size: none;
        width: 100%;
        box-sizing: border-box;
    }

    p.description-text {
        background-color: var(--background-secondary);
        border: 1px solid var(--accent);
        padding: 1rem;
        margin: 0;
        max-inline-size: none;
        width: 100%;
        box-sizing: border-box;
        margin-bottom: 2rem;
    }

    /* logo animation */
    .logo {
        transition: all 0.2s ease-out;
    }
    .logo:hover {
        animation: buzz 0.32s linear 2;
        transform: scale(1.1) translateZ(0);
        filter: brightness(1.1);
    }
    @keyframes buzz {
        50% {
            transform: translateX(3px) rotate(2deg);
        }
        100% {
            transform: translateX(-3px) rotate(-2deg);
        }
    }
    @supports (not (animation: buzz)) {
        .logo:hover {
            -webkit-animation: buzz 0.32s linear 2;
        }
    }
    @media (prefers-reduced-motion: reduce) {
        .logo:hover {
            animation: none;
            transform: scale(1.2);
        }
    }


</style>

<script is:inline>
    history.scrollRestoration = "manual";
    window.onbeforeunload = function () {
        window.scrollTo(0, 0);
    };

    const nav = document.querySelector(".floating-nav");
    const pageCTA = document.querySelector(".floating-nav .submit-btn");
    var pageCTAPosition = 0;
    if (pageCTA) {
        pageCTAPosition = pageCTA.getBoundingClientRect().bottom;
    }

    var previousScrollPosition = 0;

    const handleNavScroll = () => {
        let currentScrolledPosition = window.scrollY || window.pageYOffset;
        if (isScrollingDown()) {
            nav.classList.add("scroll-down");
            nav.classList.remove("scroll-up");
        } else {
            nav.classList.add("scroll-up");
            nav.classList.remove("scroll-down");
        }
        if (currentScrolledPosition > pageCTAPosition + 50) {
            if (!nav.classList.contains("is-active")) {
                nav.classList.add("is-active");
            }
        } else {
            if (nav.classList.contains("is-active")) {
                nav.classList.remove("is-active");
            }
        }
    };

    function isScrollingDown() {
        let currentScrolledPosition = window.scrollY || window.pageYOffset;
        let scrollingDown;
        if (currentScrolledPosition > previousScrollPosition) {
            scrollingDown = true;
        } else {
            scrollingDown = false;
        }
        previousScrollPosition = currentScrolledPosition;
        return scrollingDown;
    }

    var throttleWait;
    function throttle(callback, time) {
        if (throttleWait) return;
        throttleWait = true;
        setTimeout(() => {
            callback();
            throttleWait = false;
        }, time);
    }

    window.addEventListener("scroll", () => {
        throttle(handleNavScroll, 80);
    });
</script>

<script is:inline>
    // Initial theme setup
    const theme = (() => {
        if (
            typeof localStorage !== "undefined" &&
            localStorage.getItem("theme-preference")
        ) {
            return localStorage.getItem("theme-preference");
        }
        return window.matchMedia("(prefers-color-scheme: dark)").matches
            ? "dark"
            : "light";
    })();

    document.firstElementChild.setAttribute("data-new-ui-theme", theme);

    // Handle theme toggle
    function toggleTheme() {
        const currentTheme =
            document.firstElementChild.getAttribute("data-new-ui-theme");
        const newTheme = currentTheme === "light" ? "dark" : "light";

        document.firstElementChild.setAttribute("data-new-ui-theme", newTheme);
        localStorage.setItem("theme-preference", newTheme);
    }

    // Initialize toggle button
    function initThemeToggle() {
        const themeToggle = document.querySelector("#theme-toggle");
        if (themeToggle) {
            themeToggle.addEventListener("click", toggleTheme);
        }
    }

    // Handle page transitions
    document.addEventListener("astro:page-load", () => {
        const storedTheme = localStorage.getItem("theme-preference");
        if (storedTheme) {
            document.firstElementChild.setAttribute(
                "data-new-ui-theme",
                storedTheme,
            );
        }
        initThemeToggle();
    });

    // Handle system theme changes
    window
        .matchMedia("(prefers-color-scheme: dark)")
        .addEventListener("change", ({ matches: isDark }) => {
            const newTheme = isDark ? "dark" : "light";
            document.firstElementChild.setAttribute(
                "data-new-ui-theme",
                newTheme,
            );
            localStorage.setItem("theme-preference", newTheme);
        });

    // Initialize on first load
    initThemeToggle();
</script>
